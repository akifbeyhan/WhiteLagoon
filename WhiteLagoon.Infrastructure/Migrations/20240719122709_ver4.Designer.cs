// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WhiteLagoon.Infrastructure.Data;

#nullable disable

namespace WhiteLagoon.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240719122709_ver4")]
    partial class ver4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WhiteLagoon.Domain.Entities.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Sqft")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 7, 19, 15, 27, 9, 170, DateTimeKind.Local).AddTicks(5395),
                            Description = "250m2 Full deniz manzarali 3 odali",
                            ImageUrl = "https://placehold.co/600x400",
                            Name = "Royal Villa",
                            Occupancy = 4,
                            Price = 500.0,
                            Sqft = 250
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 7, 19, 15, 27, 9, 170, DateTimeKind.Local).AddTicks(5414),
                            Description = "350m2 Full deniz manzarali 3 odali",
                            ImageUrl = "https://placehold.co/600x400",
                            Name = "Premium Pool Villa",
                            Occupancy = 4,
                            Price = 600.0,
                            Sqft = 350
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 7, 19, 15, 27, 9, 170, DateTimeKind.Local).AddTicks(5417),
                            Description = "400m2 Full deniz manzarali 3 odali",
                            ImageUrl = "https://placehold.co/600x400",
                            Name = "Luxury Villa",
                            Occupancy = 4,
                            Price = 700.0,
                            Sqft = 400
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
